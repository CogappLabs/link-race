{"version":3,"sources":["components/obj.jsx","components/step.jsx","components/path.jsx","components/header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Obj","url","metadata","nodes","title","description","img","urlParse","className","src","alt","width","height","href","target","rel","Neighbours","step","progress","setProgress","neighbours","setNeighbours","useEffect","nextBestStep","sort","map","n","tried","stepHandler","e","id","i","Object","assign","neighbour","onClick","Step","showNeighbours","Path","path","refreshPage","window","location","reload","Header","progress_tracker","length","push","ProgressHTML","parseFloat","toFixed","el","index","paths","Math","floor","random","App","useState","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b883b84c.chunk.js","sourcesContent":["import React from \"react\";\nimport nodes from \"../data/nodes.json\";\n\nfunction urlParse(url, nodes) {\n  const metadata = nodes[url];\n  return {\n    url: url,\n    title: metadata.title,\n    description: metadata.description,\n    img: metadata.img,\n  };\n}\n\nconst Obj = ({ url }) => {\n  const metadata = urlParse(url, nodes);\n  return (\n    <div className=\"parent\">\n      <div className=\"left\">\n        <img src={metadata.img} alt={metadata.title} width=\"100\" height=\"100\" />\n      </div>\n      <div className=\"right\">\n        <h2>{metadata.title}</h2>\n        <p>{metadata.description}</p>\n        <br />\n        <a className=\"find-more\" href={url} target=\"_blank\" rel=\"noreferrer\">\n          Find out more...\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Obj;\n","import React, { useEffect } from \"react\";\nimport Obj from \"./obj\";\n\nconst Neighbours = ({\n  step,\n  progress,\n  setProgress,\n  neighbours,\n  setNeighbours,\n}) => {\n  // initialise neighbours\n  useEffect(() => {\n    setNeighbours(\n      [step.nextBestStep, ...step.neighbours]\n        .sort()\n        .map((n) => ({ url: n, tried: false }))\n    );\n  }, []);\n\n  const stepHandler = (e) => {\n    // if click.url = step.nextBestStep, +1 to progress\n    // else, change tried to true, for CSS styling\n    if (e.target.id === step.nextBestStep) {\n      setProgress(progress + 1);\n    } else {\n      setNeighbours(\n        neighbours.map((i) =>\n          i.url === e.target.id ? Object.assign(i, { tried: true }) : i\n        )\n      );\n    }\n  };\n\n  return (\n    <div>\n      {neighbours.map((neighbour) => (\n        <div className=\"option\">\n          <Obj url={neighbour.url} />\n          <button\n            id={neighbour.url}\n            onClick={stepHandler}\n            className={`button ${neighbour.tried ? \"tried\" : \"\"}`}\n          >\n            Step here\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst Step = ({\n  step,\n  showNeighbours,\n  progress,\n  setProgress,\n  neighbours,\n  setNeighbours,\n}) => {\n  return (\n    <div>\n      <Obj url={step.url} />\n      {showNeighbours && (\n        <Neighbours\n          step={step}\n          progress={progress}\n          setProgress={setProgress}\n          neighbours={neighbours}\n          setNeighbours={setNeighbours}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Step;\n","import React from \"react\";\nimport Step from \"./step\";\n\nconst Path = ({\n  path,\n  showNeighbours,\n  progress,\n  setProgress,\n  neighbours,\n  setNeighbours,\n}) => {\n  if (showNeighbours) {\n    return (\n      <div>\n        {path.map((step) => (\n          <Step\n            key={step.url}\n            step={step}\n            showNeighbours={showNeighbours}\n            progress={progress}\n            setProgress={setProgress}\n            neighbours={neighbours}\n            setNeighbours={setNeighbours}\n          />\n        ))}\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        {path.map((step) => (\n          <Step key={step.url} step={step} showNeighbours={showNeighbours} />\n        ))}\n      </div>\n    );\n  }\n};\n\nexport default Path;\n","import React from \"react\";\nimport nodes from \"../data/nodes.json\";\n\nfunction urlParse(url, nodes) {\n  const metadata = nodes[url];\n  return {\n    url: url,\n    title: metadata.title,\n    description: metadata.description,\n    img: metadata.img,\n  };\n}\n\nfunction refreshPage() {\n  window.location.reload(false);\n}\n\nconst Header = ({ path, progress }) => {\n  const progress_tracker = [];\n  for (let i = 0; i < path.length - 1; i++) {\n    if (i < progress) {\n      progress_tracker.push(urlParse(path[i].url, nodes));\n    } else {\n      progress_tracker.push({\n        url: null,\n        title: \"?\",\n        description: null,\n        img: null,\n      });\n    }\n  }\n  progress_tracker.push(urlParse(path[path.length - 1].url, nodes));\n\n  let ProgressHTML = () => {\n    if (path[progress - 1].progress === 100) {\n      return (\n        <button className=\"button\" onClick={refreshPage}>\n          You've found the path!!! Play Again\n        </button>\n      );\n    } else {\n      return (\n        <h2>Progress: {parseFloat(path[progress - 1].progress).toFixed(0)}%</h2>\n      );\n    }\n  };\n\n  return (\n    <div className=\"header-container sticky\">\n      {progress_tracker.map((el, index) => (\n        <div key={index} className=\"header-element\">\n          <img src={el.img} alt={el.url} width=\"60\" height=\"60\" />\n          <a href={el.url} target=\"_blank\" rel=\"noreferrer\">\n            {el.title}\n          </a>\n        </div>\n      ))}\n      <div className=\"header-element\">\n        <ProgressHTML />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Path from \"./components/path\";\nimport Header from \"./components/header\";\nimport paths from \"./data/paths.json\";\nconst path = paths[Math.floor(Math.random() * paths.length)];\n\nfunction App() {\n  const [progress, setProgress] = useState(1);\n  const [neighbours, setNeighbours] = useState([]);\n\n  if (progress === path.length) {\n    return (\n      <div>\n        <Header path={path} progress={progress} />\n        <Path path={path} showNeighbours={false} />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Header path={path} progress={progress} />\n        <Path\n          path={path.slice(progress - 1, progress)}\n          showNeighbours={true}\n          progress={progress}\n          setProgress={setProgress}\n          neighbours={neighbours}\n          setNeighbours={setNeighbours}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}